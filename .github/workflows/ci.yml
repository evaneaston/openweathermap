name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
  RUST_BACKTRACE: 1

jobs:
  # Prevents concurrent runs on the same branch to avoid resource conflicts
  pre_ci:
    uses: dtolnay/.github/.github/workflows/pre_ci.yml@master

  log_run_info:
    needs: pre_ci
    runs-on: ubuntu-latest
    steps:
      - name: Log run trigger and status
        run: |
          echo "::notice::CI triggered by: ${{ github.event_name }}"
          echo "::notice::Ref: ${{ github.ref }}"
          echo "::notice::Actor: ${{ github.actor }}"
          if [ "${{ needs.pre_ci.outputs.continue }}" != "true" ]; then
            echo "::warning::Run skipped by pre_ci - likely due to concurrent execution prevention"
          else
            echo "::notice::Run will continue - no conflicts detected"
          fi

  ensure_api_key_set:
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    steps:
      - if: ${{ env.API_KEY == '' }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('API_KEY secret must be defined!')

  test:
    name: Rust ${{matrix.rust}} ${{matrix.os}}
    needs: ensure_api_key_set
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            rust: nightly
          - os: ubuntu-latest
            rust: beta
          - os: ubuntu-latest
            rust: 1.82.0

    steps:
      - uses: actions/checkout@v5
      - uses: ilammy/setup-nasm@v1
        if: matrix.os == 'windows-latest'
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo test

  format:
    name: Format Check And Linting
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: "rustfmt,clippy"
      - run: cargo fmt -- --check
      - run: cargo clippy

  doc:
    name: Documentation
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
      - uses: dtolnay/install@cargo-docs-rs
      - run: cargo docs-rs -p openweathermap_client 
