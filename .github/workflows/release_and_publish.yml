name: Release and Publish

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always
  API_KEY: ${{ secrets.API_KEY }}
  RUST_BACKTRACE: 1

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Extract version from tag
      id: version
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        echo "VERSION=$TAG" >> $GITHUB_OUTPUT
        echo "Tagged version: $TAG"
        
    - name: Verify version consistency
      run: |
        chmod +x ./.github/scripts/verify-versions.sh
        ./.github/scripts/verify-versions.sh ${{ steps.version.outputs.VERSION }}
        
    - name: Format check
      run: cargo fmt --all -- --check
      
    - name: Clippy check
      run: cargo clippy --all-targets --all-features
      
    - name: Build all workspace members
      run: cargo build --release --all-features --workspace
      
    - name: Run tests
      run: cargo test --all-features --workspace
      
    - name: Generate documentation
      run: |
        cargo doc --all-features --workspace --no-deps
        echo "<meta http-equiv=\"refresh\" content=\"0; url=./$(ls target/doc | head -n1)/index.html\">" > target/doc/index.html
        
    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: target/doc/
        
    - name: Publish to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: |
        chmod +x ./.github/scripts/publish-crates.sh
        ./.github/scripts/publish-crates.sh
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Release ${{ steps.version.outputs.VERSION }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}